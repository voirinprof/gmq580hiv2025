version: '3.9'

services:
  web:
    build: ./app
    # Pour monter le volume
    volumes:
      - ./app:/app
    # Retirer le commentaire pour exposer le port
    #ports:
    #  - "${FLASK_PORT}:5000"
    environment:
      # Variables d'environnement (du fichier .env)
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      FLASK_ENV: development
    depends_on:
      db:
        # Attendre que le service db soit prêt
        condition: service_healthy

  db:
    image: postgis/postgis:13-3.1
    # Pour monter le volume
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      # Variables d'environnement (du fichier .env)
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      # Vérifier que le service est prêt
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  nginx:
    image: nginx:1-alpine
    # exposer le port 80
    ports:
      - "80:80"
    # Pour monter le volume
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web

volumes:
  postgis_data:
